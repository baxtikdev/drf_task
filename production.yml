volumes:
  production_postgres_data: { }
  production_postgres_data_backups: { }
  production_django_media: { }
  production_redis_data: { }

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: dms_production_django
    volumes:
      - /var/www/api.example.uz/media:/app/dms/media
      - /var/www/api.example.uz/static:/app/dms/staticfiles
    depends_on:
      - postgres
      # - elasticsearch
      - redis
    ports:
      - 8001:8001
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: dms_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: docker.io/redis:6
    volumes:
      - production_redis_data:/data

  celeryworker:
    <<: *django
    image: dms_production_celeryworker
    container_name: dms_production_celeryworker
    depends_on:
      - redis
      - postgres
    ports: [ ]
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: dms_production_celerybeat
    container_name: dms_production_celerybeat
    depends_on:
      - redis
      - postgres
    ports: [ ]
    command: /start-celerybeat

#  flower:
#    <<: *django
#    image: dms_production_flower
#    container_name: dms_production_flower
#    ports:
#      - '5555:5555'
#    command: /start-flower

#  traefik:
#    build:
#      context: .
#      dockerfile: ./compose/production/traefik/Dockerfile
#    image: dms_production_traefik
#    depends_on:
#      - django
#    volumes:
#      - production_traefik:/etc/traefik/acme
#    ports:
#      - '0.0.0.0:80:80'
#      - '0.0.0.0:443:443'
#      - '0.0.0.0:5555:5555'
